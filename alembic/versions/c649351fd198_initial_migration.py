"""Initial migration

Revision ID: c649351fd198
Revises: 
Create Date: 2025-02-04 17:44:57.976311

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c649351fd198'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_compounds_CompoundId', table_name='compounds')
    op.drop_index('ix_compounds_SACCId', table_name='compounds')
    op.drop_table('compounds')
    op.drop_index('ix_targets_TargetID', table_name='targets')
    op.drop_index('ix_targets_TargetName', table_name='targets')
    op.drop_table('targets')
    op.drop_index('ix_dispatchers_DispatcherId', table_name='dispatchers')
    op.drop_index('ix_dispatchers_DispatcherName', table_name='dispatchers')
    op.drop_table('dispatchers')
    op.drop_index('ix_checkinout_CheckOutId', table_name='checkinout')
    op.drop_table('checkinout')
    op.drop_index('ix_scientists_ScientistID', table_name='scientists')
    op.drop_index('ix_scientists_ScientistName', table_name='scientists')
    op.drop_table('scientists')
    op.drop_index('ix_projects_id', table_name='projects')
    op.drop_index('ix_projects_project_name', table_name='projects')
    op.drop_table('projects')
    op.drop_index('ix_batches_BatchId', table_name='batches')
    op.drop_table('batches')
    op.drop_index('ix_orders_OrderID', table_name='orders')
    op.drop_index('ix_orders_Scientist', table_name='orders')
    op.drop_index('ix_orders_TrackingID', table_name='orders')
    op.drop_table('orders')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orders',
    sa.Column('OrderID', sa.INTEGER(), server_default=sa.text('nextval(\'"orders_OrderID_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Scientist', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Dispatcher', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ShipmentDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('TrackingID', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('NoOfShipments', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Comments', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('isComplete', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('OrderID', name='orders_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_orders_TrackingID', 'orders', ['TrackingID'], unique=False)
    op.create_index('ix_orders_Scientist', 'orders', ['Scientist'], unique=False)
    op.create_index('ix_orders_OrderID', 'orders', ['OrderID'], unique=False)
    op.create_table('batches',
    sa.Column('BatchId', sa.INTEGER(), server_default=sa.text('nextval(\'"batches_BatchId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('OrderId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Target', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Scientist', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Project', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('IsPhysicallyReceived', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('ReceivedDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('IsCDDRegistered', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('CDDRegisteredDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('CDDImportFileName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('IsInitialCheckedOut', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('Comments', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('S3PlateMapLocation', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['OrderId'], ['orders.OrderID'], name='batches_OrderId_fkey'),
    sa.PrimaryKeyConstraint('BatchId', name='batches_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_batches_BatchId', 'batches', ['BatchId'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('projects_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('project_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='projects_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_projects_project_name', 'projects', ['project_name'], unique=True)
    op.create_index('ix_projects_id', 'projects', ['id'], unique=False)
    op.create_table('scientists',
    sa.Column('ScientistID', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('ScientistName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('UIN', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('ScientistID', name='scientists_pkey'),
    sa.UniqueConstraint('Email', name='scientists_Email_key'),
    sa.UniqueConstraint('UIN', name='scientists_UIN_key')
    )
    op.create_index('ix_scientists_ScientistName', 'scientists', ['ScientistName'], unique=False)
    op.create_index('ix_scientists_ScientistID', 'scientists', ['ScientistID'], unique=False)
    op.create_table('checkinout',
    sa.Column('CheckOutId', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('BatchId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Scientist', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('CheckoutDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('TentativeReturnDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Purpose', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('IsReturned', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('ActualReturnDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('IsResultedUploadedToCDD', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('CDDResultURL', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Reviewer', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('IsReviewed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('ReviewDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Comments', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('IsPlateCreated', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['BatchId'], ['batches.BatchId'], name='checkinout_BatchId_fkey'),
    sa.PrimaryKeyConstraint('CheckOutId', name='checkinout_pkey')
    )
    op.create_index('ix_checkinout_CheckOutId', 'checkinout', ['CheckOutId'], unique=False)
    op.create_table('dispatchers',
    sa.Column('DispatcherId', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('DispatcherName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('DispatcherId', name='dispatchers_pkey')
    )
    op.create_index('ix_dispatchers_DispatcherName', 'dispatchers', ['DispatcherName'], unique=False)
    op.create_index('ix_dispatchers_DispatcherId', 'dispatchers', ['DispatcherId'], unique=False)
    op.create_table('targets',
    sa.Column('TargetID', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('TargetName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('TargetID', name='targets_pkey')
    )
    op.create_index('ix_targets_TargetName', 'targets', ['TargetName'], unique=False)
    op.create_index('ix_targets_TargetID', 'targets', ['TargetID'], unique=False)
    op.create_table('compounds',
    sa.Column('CompoundId', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('BatchId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('SACCId', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Concentration', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('InitialAmount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('CurrentAmountLeft', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ProjectId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['BatchId'], ['batches.BatchId'], name='compounds_BatchId_fkey'),
    sa.ForeignKeyConstraint(['ProjectId'], ['projects.id'], name='compounds_ProjectId_fkey'),
    sa.PrimaryKeyConstraint('CompoundId', name='compounds_pkey')
    )
    op.create_index('ix_compounds_SACCId', 'compounds', ['SACCId'], unique=False)
    op.create_index('ix_compounds_CompoundId', 'compounds', ['CompoundId'], unique=False)
    # ### end Alembic commands ###
