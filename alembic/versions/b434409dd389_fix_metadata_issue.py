"""Fix metadata issue

Revision ID: b434409dd389
Revises: 1e891c462ec8
Create Date: 2025-02-04 17:56:57.338549

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b434409dd389'
down_revision: Union[str, None] = '1e891c462ec8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dispatchers',
    sa.Column('DispatcherId', sa.Integer(), nullable=False),
    sa.Column('DispatcherName', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('DispatcherId')
    )
    op.create_index(op.f('ix_dispatchers_DispatcherId'), 'dispatchers', ['DispatcherId'], unique=False)
    op.create_index(op.f('ix_dispatchers_DispatcherName'), 'dispatchers', ['DispatcherName'], unique=False)
    op.create_table('projects',
    sa.Column('ProjectID', sa.Integer(), nullable=False),
    sa.Column('ProjectName', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('ProjectID')
    )
    op.create_index(op.f('ix_projects_ProjectID'), 'projects', ['ProjectID'], unique=False)
    op.create_index(op.f('ix_projects_ProjectName'), 'projects', ['ProjectName'], unique=False)
    op.create_table('scientists',
    sa.Column('ScientistID', sa.Integer(), nullable=False),
    sa.Column('ScientistName', sa.String(), nullable=True),
    sa.Column('UIN', sa.String(), nullable=True),
    sa.Column('Email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('ScientistID'),
    sa.UniqueConstraint('Email'),
    sa.UniqueConstraint('UIN')
    )
    op.create_index(op.f('ix_scientists_ScientistID'), 'scientists', ['ScientistID'], unique=False)
    op.create_index(op.f('ix_scientists_ScientistName'), 'scientists', ['ScientistName'], unique=False)
    op.create_table('targets',
    sa.Column('TargetID', sa.Integer(), nullable=False),
    sa.Column('TargetName', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('TargetID')
    )
    op.create_index(op.f('ix_targets_TargetID'), 'targets', ['TargetID'], unique=False)
    op.create_index(op.f('ix_targets_TargetName'), 'targets', ['TargetName'], unique=False)
    op.create_table('orders',
    sa.Column('OrderID', sa.Integer(), nullable=False),
    sa.Column('ScientistID', sa.Integer(), nullable=True),
    sa.Column('DispatcherID', sa.Integer(), nullable=True),
    sa.Column('ShipmentDate', sa.DateTime(), nullable=True),
    sa.Column('TrackingID', sa.String(), nullable=True),
    sa.Column('NoOfShipments', sa.Integer(), nullable=True),
    sa.Column('Comments', sa.String(), nullable=True),
    sa.Column('isComplete', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['DispatcherID'], ['dispatchers.DispatcherId'], ),
    sa.ForeignKeyConstraint(['ScientistID'], ['scientists.ScientistID'], ),
    sa.PrimaryKeyConstraint('OrderID')
    )
    op.create_index(op.f('ix_orders_OrderID'), 'orders', ['OrderID'], unique=False)
    op.create_index(op.f('ix_orders_TrackingID'), 'orders', ['TrackingID'], unique=False)
    op.create_table('batches',
    sa.Column('BatchId', sa.Integer(), nullable=False),
    sa.Column('OrderId', sa.Integer(), nullable=True),
    sa.Column('TargetID', sa.Integer(), nullable=True),
    sa.Column('ScientistID', sa.Integer(), nullable=True),
    sa.Column('ProjectID', sa.Integer(), nullable=True),
    sa.Column('IsPhysicallyReceived', sa.Boolean(), nullable=True),
    sa.Column('ReceivedDate', sa.DateTime(), nullable=True),
    sa.Column('IsCDDRegistered', sa.Boolean(), nullable=True),
    sa.Column('CDDRegisteredDate', sa.DateTime(), nullable=True),
    sa.Column('CDDImportFileName', sa.String(), nullable=True),
    sa.Column('IsInitialCheckedOut', sa.Boolean(), nullable=True),
    sa.Column('Comments', sa.String(), nullable=True),
    sa.Column('S3PlateMapLocation', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['OrderId'], ['orders.OrderID'], ),
    sa.ForeignKeyConstraint(['ProjectID'], ['projects.ProjectID'], ),
    sa.ForeignKeyConstraint(['ScientistID'], ['scientists.ScientistID'], ),
    sa.ForeignKeyConstraint(['TargetID'], ['targets.TargetID'], ),
    sa.PrimaryKeyConstraint('BatchId')
    )
    op.create_index(op.f('ix_batches_BatchId'), 'batches', ['BatchId'], unique=False)
    op.create_table('checkinout',
    sa.Column('CheckOutId', sa.Integer(), nullable=False),
    sa.Column('BatchId', sa.Integer(), nullable=True),
    sa.Column('ScientistID', sa.Integer(), nullable=True),
    sa.Column('CheckoutDate', sa.DateTime(), nullable=True),
    sa.Column('TentativeReturnDate', sa.DateTime(), nullable=True),
    sa.Column('Purpose', sa.String(), nullable=True),
    sa.Column('IsReturned', sa.Boolean(), nullable=True),
    sa.Column('ActualReturnDate', sa.DateTime(), nullable=True),
    sa.Column('IsResultedUploadedToCDD', sa.Boolean(), nullable=True),
    sa.Column('CDDResultURL', sa.String(), nullable=True),
    sa.Column('Reviewer', sa.String(), nullable=True),
    sa.Column('IsReviewed', sa.Boolean(), nullable=True),
    sa.Column('ReviewDate', sa.DateTime(), nullable=True),
    sa.Column('Comments', sa.String(), nullable=True),
    sa.Column('IsPlateCreated', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['BatchId'], ['batches.BatchId'], ),
    sa.ForeignKeyConstraint(['ScientistID'], ['scientists.ScientistID'], ),
    sa.PrimaryKeyConstraint('CheckOutId')
    )
    op.create_index(op.f('ix_checkinout_CheckOutId'), 'checkinout', ['CheckOutId'], unique=False)
    op.create_table('compounds',
    sa.Column('CompoundId', sa.Integer(), nullable=False),
    sa.Column('BatchId', sa.Integer(), nullable=True),
    sa.Column('SACCId', sa.String(), nullable=True),
    sa.Column('Concentration', sa.String(), nullable=True),
    sa.Column('InitialAmount', sa.Integer(), nullable=True),
    sa.Column('CurrentAmountLeft', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['BatchId'], ['batches.BatchId'], ),
    sa.PrimaryKeyConstraint('CompoundId')
    )
    op.create_index(op.f('ix_compounds_CompoundId'), 'compounds', ['CompoundId'], unique=False)
    op.create_index(op.f('ix_compounds_SACCId'), 'compounds', ['SACCId'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_compounds_SACCId'), table_name='compounds')
    op.drop_index(op.f('ix_compounds_CompoundId'), table_name='compounds')
    op.drop_table('compounds')
    op.drop_index(op.f('ix_checkinout_CheckOutId'), table_name='checkinout')
    op.drop_table('checkinout')
    op.drop_index(op.f('ix_batches_BatchId'), table_name='batches')
    op.drop_table('batches')
    op.drop_index(op.f('ix_orders_TrackingID'), table_name='orders')
    op.drop_index(op.f('ix_orders_OrderID'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_targets_TargetName'), table_name='targets')
    op.drop_index(op.f('ix_targets_TargetID'), table_name='targets')
    op.drop_table('targets')
    op.drop_index(op.f('ix_scientists_ScientistName'), table_name='scientists')
    op.drop_index(op.f('ix_scientists_ScientistID'), table_name='scientists')
    op.drop_table('scientists')
    op.drop_index(op.f('ix_projects_ProjectName'), table_name='projects')
    op.drop_index(op.f('ix_projects_ProjectID'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_dispatchers_DispatcherName'), table_name='dispatchers')
    op.drop_index(op.f('ix_dispatchers_DispatcherId'), table_name='dispatchers')
    op.drop_table('dispatchers')
    # ### end Alembic commands ###
